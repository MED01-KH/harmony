name: Build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build_and_run_app:
    name: Build and Run Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t myapp:latest .

      - name: Run Docker Container
        run: |
          docker run -d -p 5000:5000 --name myapp_container myapp:latest

  zap_scan:
    name: Scan Application with ZAP
    runs-on: ubuntu-latest
    needs: build_and_run_app

    steps:
      - name: Prepare Workspace and Reports
        run: |
          mkdir -p $GITHUB_WORKSPACE/zap
          chmod -R a+w $GITHUB_WORKSPACE/zap

      - name: Run ZAP Baseline Scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable -q
          docker run -v $GITHUB_WORKSPACE/zap:/zap/wrk/:rw --network=host \
            ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
            -t http://localhost:5000 \
            -J /zap/wrk/report_json.json \
            -w /zap/wrk/report_md.md \
            -r /zap/wrk/report_html.html || exit 0

      - name: Analyze ZAP Results
        run: |
          echo "Checking for high severity vulnerabilities..."
          jq -r '.site[].alerts[] | select(.risk == "High")' $GITHUB_WORKSPACE/zap/report_json.json > $GITHUB_WORKSPACE/zap/high_severity_alerts.json
          if [[ -s $GITHUB_WORKSPACE/zap/high_severity_alerts.json ]]; then
            echo "High severity vulnerabilities found!"
            cat $GITHUB_WORKSPACE/zap/high_severity_alerts.json
            exit 1
          else
            echo "No high severity vulnerabilities found."
          fi
