name: Build and Scan

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Build Docker image
        run: docker build -t my-app -f ./secops/dockerfile .
        
      - name: Run Docker container
        run: docker run -d -p 5000:5000 my-flask-app

  zap_scan:
    name: Scan with ZAP
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Workspace and Reports
        run: |
          mkdir -p $GITHUB_WORKSPACE/zap
          chmod -R a+w $GITHUB_WORKSPACE/zap

      - name: Run ZAP Baseline Scan
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:stable -q
          docker run -v $GITHUB_WORKSPACE/zap:/zap/wrk/:rw --network=host -e ZAP_AUTH_HEADER -e ZAP_AUTH_HEADER_VALUE -e ZAP_AUTH_HEADER_SITE -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://my-app-url/ -J /zap/wrk/report_json.json -w /zap/wrk/report_md.md -r /zap/wrk/report_html.html

      - name: Analyze ZAP Results
        run: |
          echo "Checking for high severity vulnerabilities..."
          jq -r '.site[].alerts[] | select(.risk == "High")' $GITHUB_WORKSPACE/zap/report_json.json > $GITHUB_WORKSPACE/zap/high_se
